plugins {
    id 'org.springframework.boot' version '3.3.1'
    id 'io.spring.dependency-management' version '1.1.5'
    id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot Starters
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    
    // JASYPT
    implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.5'
    
    // Database
    runtimeOnly 'com.mysql:mysql-connector-j'
    runtimeOnly 'com.h2database:h2' // 테스트용 인메모리 DB
    
    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    
    // Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:mysql'
}

tasks.named('test') {
    useJUnitPlatform()
    
    // 테스트 실행 시 환경변수 설정
    environment 'JASYPT_STOREPASS', System.getenv('JASYPT_STOREPASS') ?: 'MySecurePassword123!'
    environment 'KEYSTORE_LOCATION', System.getenv('KEYSTORE_LOCATION') ?: 'file:secrets/keystore.p12'
    
    // 시스템 프로퍼티로도 전달
    systemProperty 'JASYPT_STOREPASS', System.getenv('JASYPT_STOREPASS') ?: 'MySecurePassword123!'
    systemProperty 'KEYSTORE_LOCATION', System.getenv('KEYSTORE_LOCATION') ?: 'file:secrets/keystore.p12'
}

// JAR 파일 생성 시 버전 정보 포함
jar {
    enabled = false
    archiveClassifier = '' 
}

// 실행 가능한 JAR 생성
bootJar {
    enabled = true
    archiveClassifier = ''
    manifest {
        attributes(
            'Implementation-Title': project.name,
            'Implementation-Version': project.version,
            'Built-By': System.getProperty('user.name'),
            'Built-Date': new Date().format('yyyy-MM-dd HH:mm:ss'),
            'Built-JDK': System.getProperty('java.version')
        )
    }
}