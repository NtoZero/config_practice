plugins {
    id 'org.springframework.boot' version '3.3.1'
    id 'io.spring.dependency-management' version '1.1.5'
    id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // module dependency
    implementation project(':encloader')

    // Spring Boot Starters
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // JASYPT
    implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.5'

    // Database
    runtimeOnly 'com.mysql:mysql-connector-j'

    // Lombok (annotationProcessor는 각 모듈에서 직접 선언)
    annotationProcessor 'org.projectlombok:lombok'

    // Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:mysql'
}

// JAR 파일 생성 시 버전 정보 포함
jar {
    enabled = false
    archiveClassifier = ''
}

// 실행 가능한 JAR 생성
bootJar {
    enabled = true
    archiveClassifier = ''
    manifest {
        attributes(
                'Implementation-Title': project.name,
                'Implementation-Version': project.version,
                'Built-By': System.getProperty('user.name'),
                'Built-Date': new Date().format('yyyy-MM-dd HH:mm:ss'),
                'Built-JDK': System.getProperty('java.version')
        )
    }
}